# -*- coding: utf-8 -*-
"""Students  Performance Predictor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QZElnJ9RNPQaqOushVDfo6-w23MWTwY5
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score , precision_score , confusion_matrix , classification_report

df = pd.read_csv("StudentData.csv")
df['pass'] = df['G3'].apply(lambda x:1 if x >= 10 else 0)

X = df.drop(columns=['G1','G2', 'G3' ,'pass'])
y = df['pass']

X = pd.get_dummies(X , drop_first=True)
X_train , X_test , y_train , y_test = train_test_split( X , y , test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)


log_model = LogisticRegression()
log_model.fit(X_train,y_train)
y_pred_log = log_model.predict(X_test)

tree_model = DecisionTreeClassifier()
tree_model.fit(X_train,y_train)
y_pred_tree = tree_model.predict(X_test)

def evaluate(y_true, y_pred,name):
  print(f"\\n{name}")
  print("Accuracy:" , accuracy_score(y_true, y_pred))
  print("Precision:" , precision_score(y_true, y_pred))
  print("Confusion Matrix: ")
  print(confusion_matrix(y_true, y_pred))
  print(classification_report(y_true, y_pred))

evaluate(y_test, y_pred_log, "Logistic Regression")
evaluate(y_test, y_pred_tree, "Decision Tree")

importances = pd.Series(tree_model.feature_importances_, index=X.columns)
important_features = importances.sort_values(ascending=False).head(10)

important_features.plot(kind = "barh", color = "lightpink")
plt.title("Top 10 Features affecting Student Performance")
plt.xlabel("Importance")
plt.gca().invert_yaxis()
plt.show()